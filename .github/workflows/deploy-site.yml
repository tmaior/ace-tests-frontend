name: Deploy site and Terraform checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-upload:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build site
        run: |
          if [ -f package.json ]; then
            npm ci
            npm run build
          else
            echo "No package.json found; skipping build"
          fi
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Upload to S3
        run: |
          if [ -d ./dist ]; then
            aws s3 sync ./dist s3://${{ secrets.SITE_BUCKET }} --delete
          else
            echo "No ./dist directory found; skipping upload"
          fi

  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform fmt, init & plan
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          terraform -v
          terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"
          terraform fmt -check
          terraform plan -var="region=${{ secrets.AWS_REGION }}" -var="site_bucket_name=${{ secrets.SITE_BUCKET }}" -input=false

# Note: terraform apply is intentionally NOT executed in CI. Apply should be performed manually by an operator.
